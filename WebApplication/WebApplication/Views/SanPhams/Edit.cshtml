@model WebApplication.Models.SanPham

@{
    ViewBag.Title = "Edit";
}

<h4>Edit @Model.ThongTinSanPham</h4>

@using (Html.BeginForm("Edit", "SanPhams", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaSanPham)
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.GiaTien, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        @Html.EditorFor(model => model.GiaTien, new { htmlAttributes = new { @class = "form-control" } })

                        <div class="input-group-append">
                            <span class="input-group-text">vnđ</span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.GiaTien, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ThongTinSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThongTinSanPham, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ThongTinSanPham, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KhoiHanh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KhoiHanh, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KhoiHanh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.NoiDung, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2" for="img">picture</label>
        <div class="col-md-10"></div>
        <input class="form-control" type="file" name="picture" id="img" onchange="readPicture(this)" accept="image/gif,image/jpeg,image/png" />
    </div>
    <img id="Picture" />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: 'textarea#NoiDung',
            menubar: false
        });

        function readPicture(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('img#Picture').attr('src', e.target.result);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>
}